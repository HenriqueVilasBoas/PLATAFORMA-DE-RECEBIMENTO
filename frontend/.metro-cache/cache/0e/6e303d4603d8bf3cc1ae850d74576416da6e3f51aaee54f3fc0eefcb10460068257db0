{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"color","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":42},"end":{"line":3,"column":26,"index":68}}],"key":"WMoKxUKO/GMHeED0pzSR/dc1v7c=","exportNames":["*"]}},{"name":"./themes/v2/DarkTheme","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":70},"end":{"line":5,"column":53,"index":123}}],"key":"43Ph1iaaqvHA5W8CZ1o4iUlNnfU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = overlay;\n  exports.isAnimatedValue = void 0;\n  var _reactNative = require(_dependencyMap[1], \"react-native\");\n  var _color = _interopRequireDefault(require(_dependencyMap[2], \"color\"));\n  var _DarkTheme = require(_dependencyMap[3], \"./themes/v2/DarkTheme\");\n  var isAnimatedValue = it => it instanceof _reactNative.Animated.Value;\n  exports.isAnimatedValue = isAnimatedValue;\n  function overlay(elevation) {\n    var surfaceColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _DarkTheme.MD2DarkTheme.colors?.surface;\n    if (isAnimatedValue(elevation)) {\n      var inputRange = [0, 1, 2, 3, 8, 24];\n\n      // @ts-expect-error: TS doesn't seem to refine the type correctly\n      return elevation.interpolate({\n        inputRange,\n        outputRange: inputRange.map(elevation => {\n          return calculateColor(surfaceColor, elevation);\n        })\n      });\n    }\n\n    // @ts-expect-error: TS doesn't seem to refine the type correctly\n    return calculateColor(surfaceColor, elevation);\n  }\n  function calculateColor(surfaceColor) {\n    var elevation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var overlayTransparency;\n    if (elevation >= 1 && elevation <= 24) {\n      overlayTransparency = elevationOverlayTransparency[elevation];\n    } else if (elevation > 24) {\n      overlayTransparency = elevationOverlayTransparency[24];\n    } else {\n      overlayTransparency = elevationOverlayTransparency[1];\n    }\n    return (0, _color.default)(surfaceColor).mix((0, _color.default)('white'), overlayTransparency * 0.01).hex();\n  }\n  var elevationOverlayTransparency = {\n    1: 5,\n    2: 7,\n    3: 8,\n    4: 9,\n    5: 10,\n    6: 11,\n    7: 11.5,\n    8: 12,\n    9: 12.5,\n    10: 13,\n    11: 13.5,\n    12: 14,\n    13: 14.25,\n    14: 14.5,\n    15: 14.75,\n    16: 15,\n    17: 15.12,\n    18: 15.24,\n    19: 15.36,\n    20: 15.48,\n    21: 15.6,\n    22: 15.72,\n    23: 15.84,\n    24: 16\n  };\n});","lineCount":68,"map":[[8,2,1,0],[8,6,1,0,"_reactNative"],[8,18,1,0],[8,21,1,0,"require"],[8,28,1,0],[8,29,1,0,"_dependencyMap"],[8,43,1,0],[9,2,3,0],[9,6,3,0,"_color"],[9,12,3,0],[9,15,3,0,"_interopRequireDefault"],[9,37,3,0],[9,38,3,0,"require"],[9,45,3,0],[9,46,3,0,"_dependencyMap"],[9,60,3,0],[10,2,5,0],[10,6,5,0,"_DarkTheme"],[10,16,5,0],[10,19,5,0,"require"],[10,26,5,0],[10,27,5,0,"_dependencyMap"],[10,41,5,0],[11,2,7,7],[11,6,7,13,"isAnimatedValue"],[11,21,7,28],[11,24,8,2,"it"],[11,26,8,71],[11,30,9,27,"it"],[11,32,9,29],[11,44,9,41,"Animated"],[11,65,9,49],[11,66,9,50,"Value"],[11,71,9,55],[12,2,9,56,"exports"],[12,9,9,56],[12,10,9,56,"isAnimatedValue"],[12,25,9,56],[12,28,9,56,"isAnimatedValue"],[12,43,9,56],[13,2,11,15],[13,11,11,24,"overlay"],[13,18,11,31,"overlay"],[13,19,12,2,"elevation"],[13,28,12,14],[13,30,14,79],[14,4,14,79],[14,8,13,2,"surfaceColor"],[14,20,13,22],[14,23,13,22,"arguments"],[14,32,13,22],[14,33,13,22,"length"],[14,39,13,22],[14,47,13,22,"arguments"],[14,56,13,22],[14,64,13,22,"undefined"],[14,73,13,22],[14,76,13,22,"arguments"],[14,85,13,22],[14,91,13,25,"MD2DarkTheme"],[14,114,13,37],[14,115,13,38,"colors"],[14,121,13,44],[14,123,13,46,"surface"],[14,130,13,53],[15,4,15,2],[15,8,15,6,"isAnimatedValue"],[15,23,15,21],[15,24,15,22,"elevation"],[15,33,15,31],[15,34,15,32],[15,36,15,34],[16,6,16,4],[16,10,16,10,"inputRange"],[16,20,16,20],[16,23,16,23],[16,24,16,24],[16,25,16,25],[16,27,16,27],[16,28,16,28],[16,30,16,30],[16,31,16,31],[16,33,16,33],[16,34,16,34],[16,36,16,36],[16,37,16,37],[16,39,16,39],[16,41,16,41],[16,42,16,42],[18,6,18,4],[19,6,19,4],[19,13,19,11,"elevation"],[19,22,19,20],[19,23,19,21,"interpolate"],[19,34,19,32],[19,35,19,33],[20,8,20,6,"inputRange"],[20,18,20,16],[21,8,21,6,"outputRange"],[21,19,21,17],[21,21,21,19,"inputRange"],[21,31,21,29],[21,32,21,30,"map"],[21,35,21,33],[21,36,21,35,"elevation"],[21,45,21,44],[21,49,21,49],[22,10,22,8],[22,17,22,15,"calculateColor"],[22,31,22,29],[22,32,22,30,"surfaceColor"],[22,44,22,42],[22,46,22,44,"elevation"],[22,55,22,53],[22,56,22,54],[23,8,23,6],[23,9,23,7],[24,6,24,4],[24,7,24,5],[24,8,24,6],[25,4,25,2],[27,4,27,2],[28,4,28,2],[28,11,28,9,"calculateColor"],[28,25,28,23],[28,26,28,24,"surfaceColor"],[28,38,28,36],[28,40,28,38,"elevation"],[28,49,28,47],[28,50,28,48],[29,2,29,0],[30,2,31,0],[30,11,31,9,"calculateColor"],[30,25,31,23,"calculateColor"],[30,26,31,24,"surfaceColor"],[30,38,31,44],[30,40,31,69],[31,4,31,69],[31,8,31,46,"elevation"],[31,17,31,63],[31,20,31,63,"arguments"],[31,29,31,63],[31,30,31,63,"length"],[31,36,31,63],[31,44,31,63,"arguments"],[31,53,31,63],[31,61,31,63,"undefined"],[31,70,31,63],[31,73,31,63,"arguments"],[31,82,31,63],[31,88,31,66],[31,89,31,67],[32,4,32,2],[32,8,32,6,"overlayTransparency"],[32,27,32,33],[33,4,33,2],[33,8,33,6,"elevation"],[33,17,33,15],[33,21,33,19],[33,22,33,20],[33,26,33,24,"elevation"],[33,35,33,33],[33,39,33,37],[33,41,33,39],[33,43,33,41],[34,6,34,4,"overlayTransparency"],[34,25,34,23],[34,28,34,26,"elevationOverlayTransparency"],[34,56,34,54],[34,57,34,55,"elevation"],[34,66,34,64],[34,67,34,65],[35,4,35,2],[35,5,35,3],[35,11,35,9],[35,15,35,13,"elevation"],[35,24,35,22],[35,27,35,25],[35,29,35,27],[35,31,35,29],[36,6,36,4,"overlayTransparency"],[36,25,36,23],[36,28,36,26,"elevationOverlayTransparency"],[36,56,36,54],[36,57,36,55],[36,59,36,57],[36,60,36,58],[37,4,37,2],[37,5,37,3],[37,11,37,9],[38,6,38,4,"overlayTransparency"],[38,25,38,23],[38,28,38,26,"elevationOverlayTransparency"],[38,56,38,54],[38,57,38,55],[38,58,38,56],[38,59,38,57],[39,4,39,2],[40,4,40,2],[40,11,40,9],[40,15,40,9,"color"],[40,29,40,14],[40,31,40,15,"surfaceColor"],[40,43,40,27],[40,44,40,28],[40,45,41,5,"mix"],[40,48,41,8],[40,49,41,9],[40,53,41,9,"color"],[40,67,41,14],[40,69,41,15],[40,76,41,22],[40,77,41,23],[40,79,41,25,"overlayTransparency"],[40,98,41,44],[40,101,41,47],[40,105,41,51],[40,106,41,52],[40,107,42,5,"hex"],[40,110,42,8],[40,111,42,9],[40,112,42,10],[41,2,43,0],[42,2,45,0],[42,6,45,6,"elevationOverlayTransparency"],[42,34,45,58],[42,37,45,61],[43,4,46,2],[43,5,46,3],[43,7,46,5],[43,8,46,6],[44,4,47,2],[44,5,47,3],[44,7,47,5],[44,8,47,6],[45,4,48,2],[45,5,48,3],[45,7,48,5],[45,8,48,6],[46,4,49,2],[46,5,49,3],[46,7,49,5],[46,8,49,6],[47,4,50,2],[47,5,50,3],[47,7,50,5],[47,9,50,7],[48,4,51,2],[48,5,51,3],[48,7,51,5],[48,9,51,7],[49,4,52,2],[49,5,52,3],[49,7,52,5],[49,11,52,9],[50,4,53,2],[50,5,53,3],[50,7,53,5],[50,9,53,7],[51,4,54,2],[51,5,54,3],[51,7,54,5],[51,11,54,9],[52,4,55,2],[52,6,55,4],[52,8,55,6],[52,10,55,8],[53,4,56,2],[53,6,56,4],[53,8,56,6],[53,12,56,10],[54,4,57,2],[54,6,57,4],[54,8,57,6],[54,10,57,8],[55,4,58,2],[55,6,58,4],[55,8,58,6],[55,13,58,11],[56,4,59,2],[56,6,59,4],[56,8,59,6],[56,12,59,10],[57,4,60,2],[57,6,60,4],[57,8,60,6],[57,13,60,11],[58,4,61,2],[58,6,61,4],[58,8,61,6],[58,10,61,8],[59,4,62,2],[59,6,62,4],[59,8,62,6],[59,13,62,11],[60,4,63,2],[60,6,63,4],[60,8,63,6],[60,13,63,11],[61,4,64,2],[61,6,64,4],[61,8,64,6],[61,13,64,11],[62,4,65,2],[62,6,65,4],[62,8,65,6],[62,13,65,11],[63,4,66,2],[63,6,66,4],[63,8,66,6],[63,12,66,10],[64,4,67,2],[64,6,67,4],[64,8,67,6],[64,13,67,11],[65,4,68,2],[65,6,68,4],[65,8,68,6],[65,13,68,11],[66,4,69,2],[66,6,69,4],[66,8,69,6],[67,2,70,0],[67,3,70,1],[68,0,70,2],[68,3]],"functionMap":{"names":["<global>","isAnimatedValue","overlay","inputRange.map$argument_0","calculateColor"],"mappings":"AAA;+BCM;uDDE;eEE;kCCU;ODE;CFM;AIE;CJY"}},"type":"js/module"}]}