{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./ExpoMailComposer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"/nrrrQNW2rrRx6n9UPZTWsn5rqU=","exportNames":["*"]}},{"name":"./MailComposer.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":34,"column":0,"index":1561},"end":{"line":34,"column":37,"index":1598}}],"key":"EPKXPVtZiUcp9FgoZmoVvRLzpEw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    getClients: true,\n    composeAsync: true,\n    isAvailableAsync: true\n  };\n  exports.composeAsync = composeAsync;\n  exports.getClients = getClients;\n  exports.isAvailableAsync = isAvailableAsync;\n  var _ExpoMailComposer = _interopRequireDefault(require(_dependencyMap[1], \"./ExpoMailComposer\"));\n  var _MailComposer = require(_dependencyMap[2], \"./MailComposer.types\");\n  Object.keys(_MailComposer).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _MailComposer[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return _MailComposer[key];\n      }\n    });\n  });\n  /**\n   * Retrieves a list of available email clients installed on the device.\n   * This can be used to present options to the user for sending emails through their preferred email client,\n   * or to open an email client so the user can access their mailbox â€” for example, to open a confirmation email sent by your app.\n   * @returns An array of available mail clients.\n   */\n  function getClients() {\n    return _ExpoMailComposer.default.getClients();\n  }\n  // @needsAudit\n  /**\n   * Opens a mail modal for iOS and a mail app intent for Android and fills the fields with provided\n   * data. On iOS you will need to be signed into the Mail app.\n   * @return A promise fulfilled with an object containing a `status` field that specifies whether an\n   * email was sent, saved, or cancelled. Android does not provide this info, so the status is always\n   * set as if the email were sent.\n   */\n  async function composeAsync(options) {\n    return await _ExpoMailComposer.default.composeAsync(options);\n  }\n  // @needsAudit\n  /**\n   * Determine if the `MailComposer` API can be used in this app.\n   * @return A promise resolves to `true` if the API can be used, and `false` otherwise.\n   * - Returns `true` when the device has a default email setup for sending mail.\n   * - Can return `false` on iOS if an MDM profile is setup to block outgoing mail. If this is the\n   * case, you may want to use the Linking API instead.\n   * - Always returns `true` in the browser.\n   */\n  async function isAvailableAsync() {\n    return await _ExpoMailComposer.default.isAvailableAsync();\n  }\n});","lineCount":59,"map":[[14,2,1,0],[14,6,1,0,"_ExpoMailComposer"],[14,23,1,0],[14,26,1,0,"_interopRequireDefault"],[14,48,1,0],[14,49,1,0,"require"],[14,56,1,0],[14,57,1,0,"_dependencyMap"],[14,71,1,0],[15,2,34,0],[15,6,34,0,"_MailComposer"],[15,19,34,0],[15,22,34,0,"require"],[15,29,34,0],[15,30,34,0,"_dependencyMap"],[15,44,34,0],[16,2,34,0,"Object"],[16,8,34,0],[16,9,34,0,"keys"],[16,13,34,0],[16,14,34,0,"_MailComposer"],[16,27,34,0],[16,29,34,0,"forEach"],[16,36,34,0],[16,47,34,0,"key"],[16,50,34,0],[17,4,34,0],[17,8,34,0,"key"],[17,11,34,0],[17,29,34,0,"key"],[17,32,34,0],[18,4,34,0],[18,8,34,0,"Object"],[18,14,34,0],[18,15,34,0,"prototype"],[18,24,34,0],[18,25,34,0,"hasOwnProperty"],[18,39,34,0],[18,40,34,0,"call"],[18,44,34,0],[18,45,34,0,"_exportNames"],[18,57,34,0],[18,59,34,0,"key"],[18,62,34,0],[19,4,34,0],[19,8,34,0,"key"],[19,11,34,0],[19,15,34,0,"exports"],[19,22,34,0],[19,26,34,0,"exports"],[19,33,34,0],[19,34,34,0,"key"],[19,37,34,0],[19,43,34,0,"_MailComposer"],[19,56,34,0],[19,57,34,0,"key"],[19,60,34,0],[20,4,34,0,"Object"],[20,10,34,0],[20,11,34,0,"defineProperty"],[20,25,34,0],[20,26,34,0,"exports"],[20,33,34,0],[20,35,34,0,"key"],[20,38,34,0],[21,6,34,0,"enumerable"],[21,16,34,0],[22,6,34,0,"get"],[22,9,34,0],[22,20,34,0,"get"],[22,21,34,0],[23,8,34,0],[23,15,34,0,"_MailComposer"],[23,28,34,0],[23,29,34,0,"key"],[23,32,34,0],[24,6,34,0],[25,4,34,0],[26,2,34,0],[27,2,2,0],[28,0,3,0],[29,0,4,0],[30,0,5,0],[31,0,6,0],[32,0,7,0],[33,2,8,7],[33,11,8,16,"getClients"],[33,21,8,26,"getClients"],[33,22,8,26],[33,24,8,29],[34,4,9,4],[34,11,9,11,"ExpoMailComposer"],[34,36,9,27],[34,37,9,28,"getClients"],[34,47,9,38],[34,48,9,39],[34,49,9,40],[35,2,10,0],[36,2,11,0],[37,2,12,0],[38,0,13,0],[39,0,14,0],[40,0,15,0],[41,0,16,0],[42,0,17,0],[43,0,18,0],[44,2,19,7],[44,17,19,22,"composeAsync"],[44,29,19,34,"composeAsync"],[44,30,19,35,"options"],[44,37,19,42],[44,39,19,44],[45,4,20,4],[45,11,20,11],[45,17,20,17,"ExpoMailComposer"],[45,42,20,33],[45,43,20,34,"composeAsync"],[45,55,20,46],[45,56,20,47,"options"],[45,63,20,54],[45,64,20,55],[46,2,21,0],[47,2,22,0],[48,2,23,0],[49,0,24,0],[50,0,25,0],[51,0,26,0],[52,0,27,0],[53,0,28,0],[54,0,29,0],[55,0,30,0],[56,2,31,7],[56,17,31,22,"isAvailableAsync"],[56,33,31,38,"isAvailableAsync"],[56,34,31,38],[56,36,31,41],[57,4,32,4],[57,11,32,11],[57,17,32,17,"ExpoMailComposer"],[57,42,32,33],[57,43,32,34,"isAvailableAsync"],[57,59,32,50],[57,60,32,51],[57,61,32,52],[58,2,33,0],[59,0,33,1],[59,3]],"functionMap":{"names":["<global>","getClients","composeAsync","isAvailableAsync"],"mappings":"AAA;OCO;CDE;OES;CFE;OGU;CHE"}},"type":"js/module"}]}